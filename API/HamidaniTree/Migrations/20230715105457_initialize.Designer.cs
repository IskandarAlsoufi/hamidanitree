// <auto-generated />
using System;
using HamidaniTree.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HamidaniTree.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230715105457_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("HamidaniTree.Model.Authontication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Authontications");
                });

            modelBuilder.Entity("HamidaniTree.Model.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FacebookUri")
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDead")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("ParentLeft")
                        .HasColumnType("int");

                    b.Property<int>("ParentRight")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasMaxLength(6000)
                        .HasColumnType("varbinary(6000)");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.HasIndex("Password")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("HamidaniTree.Model.Authontication", b =>
                {
                    b.HasOne("HamidaniTree.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HamidaniTree.Model.Person", b =>
                {
                    b.HasOne("HamidaniTree.Model.Person", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
